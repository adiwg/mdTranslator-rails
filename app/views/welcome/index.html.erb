
<h2 id="mainHeader">
	<%= image_tag "logo150.png", alt: "mdTranslator", class: "logo" %>
	<span>API</span>
	<span class="version">HTML GET</span>
</h2>

<div class="divText">
	<h2>GET</h2>
	<ul>
		<li>
			<span class="divTextHeavy">.../api/v1</span> # returns documentation of version 1 API
		</li>
		<li>
			<span class="divTextHeavy">.../api/v1/options</span> # returns JSON formatted lists of options intended for support loading selection lists in automated tools; <br>
			returns readers, writers, and request formats, <br>
			supports callback option for JSONp
		</li>
		<li>
			<span class="divTextHeavy">.../api/v1?{options}</span> # see GET options list
		</li>
	</ul>
	<h2>GET Options:</h2>
	<ul>
		<li>
			<span class="divTextHeavy">reader= (string)</span> # returns documentation on the specified reader
		</li>
		<li>
			<span class="divTextHeavy">writer= (string)</span> # returns documentation on the specified writer
		</li>
	</ul>
	<br>
	<h2>POST</h2>
	<ul>
		<li>
			<span class="divTextHeavy">.../api/v1?{options}</span> # see POST options list
		</li>
		<li>
			<span class="divTextHeavy">.../api/v1/{reader}?{options}</span> # use the specified reader to validate input, no metadata generated
		</li>
		<li>
			<span class="divTextHeavy">.../api/v1/{reader}/{writer}?{options}</span> # use the specified reader and writer to generate metadata
		</li>
	</ul>
	<h2>POST Options:</h2>
	<ul>
		<li>
			<span class="divTextHeavy">reader= (string)</span> # specify a reader for the metadata translator; required
		</li>
		<li>
			<span class="divTextHeavy">writer= (string)</span> # specify a writer for the metadata translator; nil writer validates input only
		</li>
		<li>
			<span class="divTextHeavy">validate= [none | <u>normal</u> | strict]</span> # level of input validation
		</li>
		<li>
			<span class="divTextHeavy">showAllTags= [true | <u>false</u>]</span> # creates empty tags for attributes not populated by input
		</li>
		<li>
			<span class="divTextHeavy">format= [<u>auto</u> | plain | json | xml]</span> # see below:
		</li>
		<ul>
			<li>
				--auto, detect type of return from writer and set content-type accordingly; <br>
				if a writer was not specified the content-type will be set to 'text/plain'; <br>
				if validation errors prevent the writer from being called, messages will be returned in 'text/plain'; <br>
				if error messages are returned from the writer, a wrapper will be added of content-type matching the writer output.
			</li>
			<li>
				--plain, content-type="text/plain"; <br>
				if validation or translator messages are detected, only the messages will be returned
			</li>
			<li>
				--json, add json wrapper, set content-type="application/json"
			</li>
			<li>
				--xml, add xml wrapper, set content-type="application/xml; charset=utf-8"
			</li>
		</ul>
		<li>
			<span class="divTextHeavy">callback= (string)</span> # default=null, when a name is provided, use JSONp with callback name provided, set content-type="application/javascript"
		</li>
	</ul>

</div>