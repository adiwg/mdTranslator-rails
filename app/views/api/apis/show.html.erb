<!--
# Alaska Data Integration working group - ADIwg

# REST endpoint controller for description of api

# History:
#   Stan Smith 2017-05-20 refactored for mdTranslator 2.0
#   Josh Bradley 2014-11-12 update and reformat
#   Stan Smith 2014-11-07 added option for codeName support
#   Stan Smith 2014-11-03 added codeList support
#   Stan Smith 2014-10-11 changed test resource to demo and added reference
#   Stan Smith 2014-10-11 added reference to v2i/v1/api as alternate link
#   Stan Smith 2014-10-09 initial
-->

<h2 id="mainHeader">
    <%= image_tag "logo150.png", alt: "mdTranslator", class: "logo" %>
    <span>API version 2</span>
    <span class="version">Reference</span>
</h2>

<%
   doc = <<~MARKDOWN

      ## Documentation and Lists

      ### GET

       * __.../__ # returns the welcome page with information and links about the mdTranslator
       * __.../api/readers__ # returns a list of support mdTranslator readers
       * __.../api/readers/{reader}__ # returns documentation for a specific mdTranslator reader
       * __.../api/writers__ # returns a list of support mdTranslator readers
       * __.../api/writers/{writer}__ # returns documentation for a specific mdTranslator reader

      ---

       * __.../api/codelists__ # returns a JSON or XML object with all codeLists from mdCodes <br>
         - for codelists in ISO CT_CodelistCatalogue format use .../api/codelists?format=xml
         - for codelists in a JSON object use .../api/codelists?format=json
           - add definitions="true" to include code descriptions .../api/codelists?format=json&definitions=true
           - add callback="{callbackName}" for JSONp .../api/codelists?format=json&callback=myJsonP
       * __.../api/codelists/{codeListName}__ # returns a JSON object with the specified codeList
           - add definitions="true" to include code descriptions .../api/codelists/iso_role?definitions=true
           - add callback="{callbackName}" for JSONp .../api/codelists/iso_role?callback=myJsonP

      ---

       * __.../api__ # returns documentation on the mdTranslator API
       * __.../api/v2__ # returns documentation on the mdTranslator API (alternate link)
       * __.../api/v2/api__ # returns documentation on the mdTranslator API (alternate link)
       * __.../api/v2/options__ # returns a JSON object with all supported mdTranslator options;
         - intended for loading mdTranslator option lists into automated tools
         - use option callback="{callbackName}" for JSONp
       * __.../api/v2/demo__ # access to demo page to view and test mdTranslator options

      ---

      ## Translator methods

      ### GET

       * __.../api/v2/translator?{options}__ # returns metadata from the mdTranslator according to options specified
         - accepts requests with options encoded as key-value pairs in the query string.
         - only recommended for use when JSONp is required, i.e. for clients without CORS support.
         - **Note**: subject to URI size limits

      ### POST

       * __.../api/v2/translator?{options}__ # returns metadata from the mdTranslator according to options specified
         - accepts *application/x-www-form-urlencoded* requests with options encoded as key-value pairs.

      ### Options
      > __file__ (string) *required*
       : the input file to be translated by mdTranslator.<br>
          the format of the file must be provided in the 'reader=' option.
      >
      > __reader__= (string) *required*
       : specifies a reader for the mdTranslator
      >
      > __writer__= (string)
       : specifies a writer for the mdTranslator; <br> a null writer will validate input only
      >
      > __validate__= [none | __normal__ | strict]
       :
      >
      >> __none__
      >> : the input is not validated
      >>
      >> __normal__
      >> : the input must meet the structural rules for the file format; <br>
          the input must meet the minimum rule set defined by the reader schema
      >>
      >> __strict__
      >> : the input must meet the structural rules for the file format; <br>
          the input must meet the maximum rule set defined by the reader schema, all fields must have values
      >
      > __showAllTags__= [true | __false__]
       : show empty tags for all attributes that did not have values
      >
      > __format__= [__auto__ | plain | json | xml]
       :
      >
      >> __auto__
      >> : content-type is set according to the writer; <br>
          if a writer was not specified the content-type will be set to 'text/plain'; <br>
          if validation errors prevent the writer from generating a return, messages will be returned as 'text/plain'; <br>
          if error messages are returned from the writer, a wrapper will be added with the content-type set according to the writer
      >>
      >> __plain__
      >> : content-type="text/plain"; <br>
          return mdTranslator results in plain text; <br>
          if validation or translator messages are detected, only the messages will be returned
      >>
      >> __json__
      >> : content-type="application/json" <br>
           results are placed in a JSON wrapper
      >>
      >> __xml__
      >> : content-type="application/xml"; <br>
           results are placed in an XML wrapper
      >
      >
      > __callback__= (string) default=null
      > : when provided, a JSONp response if returned using the callback name provided; <br>
         - content-type is not set in the response header


MARKDOWN
%>
<%= Kramdown::Document.new(doc).to_html.html_safe %>
